apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}


// query git for the SHA, Tag and commit count. Use these to automate versioning.
def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitTag = 'git describe --tags'.execute([], project.rootDir).text.trim()
def gitCommitCount = 100 + Integer.parseInt('git rev-list --count HEAD'.execute([], project.rootDir).text.trim())

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.fortunekidew.pewaa"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode gitCommitCount
        versionName gitTag
        archivesBaseName = "pewaa-${versionName}"
        vectorDrawables.useSupportLibrary = true

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {

        debug {
            minifyEnabled false
            debuggable true
        }

        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    productFlavors {
        // Define separate dev and prod flavors
        dev21 {
            minSdkVersion 21
        }
        prod {
            // The actual minSdkVersion for the production app
            minSdkVersion 21
        }
    }


    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    def supportLibsVer = "25.1.1"
    def supportLibsFirebaseVer = "9.8.0"
    compile "com.android.support:appcompat-v7:$supportLibsVer"
    compile "com.android.support:cardview-v7:$supportLibsVer"
    compile "com.android.support:design:$supportLibsVer"
    compile "com.android.support:recyclerview-v7:$supportLibsVer"
    compile "com.android.support:palette-v7:$supportLibsVer"
    compile "com.google.firebase:firebase-core:$supportLibsFirebaseVer"
    compile "com.google.firebase:firebase-messaging:$supportLibsFirebaseVer"
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'jp.wasabeef:glide-transformations:1.3.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'jp.wasabeef:picasso-transformations:2.1.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.3.1'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.6'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.googlecode.libphonenumber:libphonenumber:7.6.1'
    compile 'io.github.rockerhieu:emojicon:1.4.1'
    compile 'io.realm:android-adapters:2.0.0'
    compile('io.socket:socket.io-client:0.7.0') {
        exclude group: 'org.json', module: 'json'
    }
    compile ('com.github.ozodrukh:CircularReveal:2.0.1@aar') {
        transitive = true;
    }

    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true;
    }

    compile 'joda-time:joda-time:2.9.4'
    compile 'nl.littlerobots.rxlint:rxlint:1.0'
    compile 'com.orhanobut:logger:1.15'

    compile 'com.jakewharton:butterknife:8.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.2.1'

    compile 'com.google.dagger:dagger:2.0'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.0'

    compile 'org.parceler:parceler-api:1.1.6'
    annotationProcessor 'org.parceler:parceler:1.1.6'
}
